{"version":3,"file":"static/js/231.6e05414b.chunk.js","mappings":"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","sources":["components/Creation/SizeSelector.jsx","components/Creation/CertificateForm.jsx","components/Creation/BorderPicker.jsx","components/Creation/Watermark.jsx","components/Creation/CertificatePreview.jsx","components/Creation/CreationSection.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { \r\n  Box, \r\n  Button, \r\n  Typography, \r\n  Paper, \r\n  Card, \r\n  CardContent,\r\n  CardActionArea,\r\n  Chip\r\n} from '@mui/material';\r\nimport { \r\n  ArrowForward, \r\n  CheckCircle,\r\n  CropSquare,\r\n  CropPortrait\r\n} from '@mui/icons-material';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst StyledContainer = styled(Box)(({ theme }) => ({\r\n  minHeight: '100vh',\r\n  background: '#f7fafd',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  padding: theme.spacing(3),\r\n  position: 'relative',\r\n  overflow: 'hidden',\r\n}));\r\n\r\nconst StyledPaper = styled(Paper)(({ theme }) => ({\r\n  padding: theme.spacing(2.5),\r\n  borderRadius: 8,\r\n  boxShadow: '0 2px 8px rgba(60, 80, 120, 0.08)',\r\n  background: '#f9f9fb',\r\n  border: '1px solid #e5e7eb',\r\n  maxWidth: 520,\r\n  width: '100%',\r\n  position: 'relative',\r\n  zIndex: 1,\r\n}));\r\n\r\nconst StyledCard = styled(Card)(({ theme, selected }) => ({\r\n  borderRadius: 8,\r\n  border: selected ? '1.5px solid #3a6ea5' : '1px solid #e0e0e0',\r\n  background: selected ? '#f0f4fa' : '#fff',\r\n  boxShadow: '0 1px 4px rgba(60, 80, 120, 0.06)',\r\n  transition: 'box-shadow 0.18s, border 0.18s, background 0.18s',\r\n  cursor: 'pointer',\r\n  position: 'relative',\r\n  overflow: 'visible',\r\n  '&:hover': {\r\n    boxShadow: '0 4px 16px rgba(60, 80, 120, 0.10)',\r\n    background: selected ? '#e3ecfa' : '#f7fafd',\r\n  },\r\n  '& .MuiCardActionArea-root': {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst SizeSelector = () => {\r\n  const navigate = useNavigate();\r\n  const [selectedSize, setSelectedSize] = useState(null);\r\n\r\n  const sizeOptions = [\r\n    {\r\n      id: 'A4-Horizontal',\r\n      name: 'A4 Horizontal',\r\n      dimensions: '297 × 210 mm',\r\n      description: 'Perfect for landscape certificates',\r\n      icon: <CropSquare sx={{ fontSize: 40, color: '#667eea' }} />,\r\n      popular: true\r\n    },\r\n    {\r\n      id: 'A4-Vertical',\r\n      name: 'A4 Vertical',\r\n      dimensions: '210 × 297 mm',\r\n      description: 'Classic portrait layout',\r\n      icon: <CropPortrait sx={{ fontSize: 40, color: '#667eea' }} />,\r\n      popular: false\r\n    },\r\n    {\r\n      id: 'A3-Horizontal',\r\n      name: 'A3 Horizontal',\r\n      dimensions: '420 × 297 mm',\r\n      description: 'Large format for special occasions',\r\n      icon: <CropSquare sx={{ fontSize: 40, color: '#667eea' }} />,\r\n      popular: false\r\n    },\r\n    {\r\n      id: 'A3-Vertical',\r\n      name: 'A3 Vertical',\r\n      dimensions: '297 × 420 mm',\r\n      description: 'Premium portrait certificates',\r\n      icon: <CropPortrait sx={{ fontSize: 40, color: '#667eea' }} />,\r\n      popular: false\r\n    }\r\n  ];\r\n\r\n  const handleSelect = (size) => {\r\n    setSelectedSize(size);\r\n    // Add a small delay for better UX\r\n    setTimeout(() => {\r\n      localStorage.setItem('certificateSize', size);\r\n      // If bulk mode is active, skip details form and go straight to border selection\r\n      const bulkMode = sessionStorage.getItem('bulkMode') === 'true';\r\n      navigate(bulkMode ? '/creation/border' : '/creation/form');\r\n    }, 300);\r\n  };\r\n\r\n  return (\r\n    <StyledContainer>\r\n      <StyledPaper elevation={0}>\r\n        <Box sx={{ textAlign: 'center', mb: 4 }}>\r\n          <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', mb: 2 }}>\r\n            <Typography variant=\"h3\" sx={{ fontWeight: 700, color: '#000000' }}>\r\n              Choose Certificate Size\r\n            </Typography>\r\n          </Box>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: 400, color: '#000000' }}>\r\n            Select the perfect size for your certificate\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Box sx={{\r\n          display: 'grid',\r\n          gridTemplateColumns: { xs: '1fr', sm: '1fr 1fr' },\r\n          gap: 2.5,\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          mb: 3,\r\n          maxWidth: 420,\r\n          mx: 'auto',\r\n        }}>\r\n          {sizeOptions.map((option) => (\r\n            <StyledCard\r\n              key={option.id}\r\n              selected={selectedSize === option.id}\r\n              elevation={0}\r\n            >\r\n              <CardActionArea onClick={() => handleSelect(option.id)}>\r\n                <CardContent sx={{ textAlign: 'center', p: 0 }}>\r\n                  <Box sx={{ position: 'relative', mb: 1.5 }}>\r\n                    {option.icon}\r\n                    {selectedSize === option.id && (\r\n                      <CheckCircle\r\n                        sx={{\r\n                          position: 'absolute',\r\n                          top: -8,\r\n                          right: -8,\r\n                          color: '#3a6ea5',\r\n                          fontSize: 22,\r\n                          backgroundColor: 'white',\r\n                          borderRadius: '50%',\r\n                          boxShadow: '0 1px 4px rgba(60, 80, 120, 0.10)',\r\n                        }}\r\n                      />\r\n                    )}\r\n                  </Box>\r\n                  <Typography variant=\"h6\" sx={{ fontWeight: 600, mb: 0.5, color: '#2d3748', fontSize: '1.08rem' }}>\r\n                    {option.name}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1, fontSize: '0.97rem' }}>\r\n                    {option.dimensions}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1, fontSize: '0.95rem' }}>\r\n                    {option.description}\r\n                  </Typography>\r\n                  {option.popular && (\r\n                    <Chip\r\n                      label=\"Most Popular\"\r\n                      size=\"small\"\r\n                      sx={{\r\n                        backgroundColor: '#3a6ea5',\r\n                        color: 'white',\r\n                        fontWeight: 600,\r\n                        fontSize: '0.8rem',\r\n                        borderRadius: 4,\r\n                        px: 1.2,\r\n                        py: 0.2,\r\n                      }}\r\n                    />\r\n                  )}\r\n                </CardContent>\r\n              </CardActionArea>\r\n            </StyledCard>\r\n          ))}\r\n        </Box>\r\n\r\n        <Box sx={{ textAlign: 'center' }}>\r\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\r\n            A4 Horizontal is perfect for most certificates and works great with our border designs\r\n          </Typography>\r\n          \r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={() => navigate('/dashboard')}\r\n            sx={{ \r\n              borderRadius: 12,\r\n              textTransform: 'none',\r\n              fontWeight: 600,\r\n              px: 3,\r\n              py: 1.5,\r\n              borderColor: '#667eea',\r\n              color: '#667eea',\r\n              '&:hover': {\r\n                borderColor: '#5a6fd8',\r\n                backgroundColor: 'rgba(102, 126, 234, 0.04)',\r\n              }\r\n            }}\r\n          >\r\n            Back to Dashboard\r\n          </Button>\r\n        </Box>\r\n      </StyledPaper>\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nexport default SizeSelector;\r\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Box,\n  Button,\n  TextField,\n  Typography,\n  Paper,\n  Grid,\n  Container,\n  Stepper,\n  Step,\n  StepLabel,\n  Card,\n  CardContent,\n  InputAdornment,\n  IconButton,\n  Alert,\n  Chip\n} from '@mui/material';\nimport { \n  Person, \n  School, \n  CalendarToday, \n  Business, \n  Description,\n  ArrowForward,\n  ArrowBack,\n  CheckCircle\n} from '@mui/icons-material';\nimport { styled } from '@mui/material/styles';\n\nconst StyledContainer = styled(Box)(({ theme }) => ({\n  minHeight: '100vh',\n  background: '#f7fafd',\n  padding: theme.spacing(3),\n  position: 'relative',\n  overflow: 'hidden',\n}));\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  padding: theme.spacing(4),\n  borderRadius: 16,\n  boxShadow: '0 8px 32px rgba(60, 80, 120, 0.12)',\n  background: 'rgba(255, 255, 255, 0.95)',\n  backdropFilter: 'blur(10px)',\n  border: '1px solid rgba(209, 217, 230, 0.5)',\n  position: 'relative',\n  zIndex: 1,\n  animation: 'slideUp 0.6s ease-out',\n  '@keyframes slideUp': {\n    from: {\n      opacity: 0,\n      transform: 'translateY(30px)',\n    },\n    to: {\n      opacity: 1,\n      transform: 'translateY(0)',\n    },\n  },\n}));\n\nconst StyledTextField = styled(TextField)(({ theme }) => ({\n  '& .MuiOutlinedInput-root': {\n    borderRadius: 8,\n    backgroundColor: '#ffffff',\n    border: '1.5px solid #d1d9e6',\n    padding: '8px 12px',\n    '&:hover': {\n      backgroundColor: '#ffffff',\n      borderColor: '#3a6ea5',\n    },\n    '&.Mui-focused': {\n      backgroundColor: '#ffffff',\n      borderColor: '#3a6ea5',\n      boxShadow: '0 0 0 3px rgba(58, 110, 165, 0.1)',\n    },\n    '& .MuiInputBase-input': {\n      padding: '12px 16px',\n    },\n    '& .MuiInputAdornment-root': {\n      marginRight: '8px',\n    },\n  },\n  '& .MuiInputLabel-root': {\n    color: '#5a6c7d',\n    '&.Mui-focused': {\n      color: '#3a6ea5',\n    },\n  },\n}));\n\nconst StyledButton = styled(Button)(({ theme }) => ({\n  borderRadius: 10,\n  textTransform: 'none',\n  fontWeight: 500,\n  padding: theme.spacing(1.5, 3),\n  fontSize: '1.1rem',\n  background: '#3a6ea5',\n  color: 'white',\n  transition: 'all 0.25s cubic-bezier(0.4, 0, 0.2, 1)',\n  boxShadow: '0 2px 8px rgba(60, 80, 120, 0.08)',\n  '&:hover': {\n    transform: 'translateY(-2px)',\n    boxShadow: '0 8px 25px rgba(102, 126, 234, 0.4)',\n    background: 'linear-gradient(45deg, #5a6fd8 30%, #6a4190 90%)',\n  },\n}));\n\nconst CertificateForm = () => {\n  const [form, setForm] = useState({\n    name: '',\n    course: '',\n    date: '',\n    issuer: '',\n    paragraph: '',\n    certificateTitle: 'Certificate of Completion',\n  });\n\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n\n  const steps = ['Size', 'Details', 'Border', 'Preview'];\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setForm({ ...form, [name]: value });\n    \n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors({ ...errors, [name]: '' });\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n    \n    if (!form.name.trim()) newErrors.name = 'Recipient name is required';\n    if (!form.course.trim()) newErrors.course = 'Course name is required';\n    if (!form.date) newErrors.date = 'Date is required';\n    if (!form.issuer.trim()) newErrors.issuer = 'Issuer name is required';\n    if (!form.paragraph.trim()) newErrors.paragraph = 'Certificate paragraph is required';\n    \n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    if (validateForm()) {\n      localStorage.setItem('certificateData', JSON.stringify(form));\n      // If we came from bulk flow, still go through border/preview as usual\n      navigate('/creation/border');\n    }\n  };\n\n  const getCurrentDate = () => {\n    const today = new Date();\n    return today.toISOString().split('T')[0];\n  };\n\n  return (\n    <StyledContainer>\n      <Container maxWidth=\"md\">\n        <StyledPaper elevation={0}>\n          {/* Header */}\n          <Box sx={{ textAlign: 'center', mb: 4 }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', mb: 2 }}>\n              <Typography variant=\"h3\" sx={{ fontWeight: 700, color: '#000000' }}>\n                Certificate Details\n              </Typography>\n            </Box>\n            <Typography variant=\"h6\" sx={{ fontWeight: 400, mb: 3, color: '#000000' }}>\n              Fill in the details for your certificate\n            </Typography>\n\n            {/* Progress Stepper */}\n            <Stepper activeStep={1} sx={{ mb: 4 }}>\n              {steps.map((label) => (\n                <Step key={label}>\n                  <StepLabel>{label}</StepLabel>\n                </Step>\n              ))}\n            </Stepper>\n          </Box>\n\n          {/* Form */}\n          <Box component=\"form\" onSubmit={handleSubmit}>\n            <Grid container spacing={3}>\n              <Grid item xs={12} sm={6}>\n                <StyledTextField\n                  fullWidth\n                  label=\"Recipient Name\"\n                  name=\"name\"\n                  value={form.name}\n                  onChange={handleChange}\n                  error={!!errors.name}\n                  helperText={errors.name}\n                  required\n                  variant=\"outlined\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <Person sx={{ color: '#667eea' }} />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n\n              <Grid item xs={12} sm={6}>\n                <StyledTextField\n                  fullWidth\n                  label=\"Course Name\"\n                  name=\"course\"\n                  value={form.course}\n                  onChange={handleChange}\n                  error={!!errors.course}\n                  helperText={errors.course}\n                  required\n                  variant=\"outlined\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <School sx={{ color: '#667eea' }} />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n\n              <Grid item xs={12} sm={6}>\n                <StyledTextField\n                  fullWidth\n                  label=\"Certificate Date\"\n                  name=\"date\"\n                  type=\"date\"\n                  value={form.date}\n                  onChange={handleChange}\n                  error={!!errors.date}\n                  helperText={errors.date}\n                  InputLabelProps={{ shrink: true }}\n                  required\n                  variant=\"outlined\"\n                  inputProps={{ max: getCurrentDate() }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <CalendarToday sx={{ color: '#667eea' }} />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n\n              <Grid item xs={12} sm={6}>\n                <StyledTextField\n                  fullWidth\n                  label=\"Issuing Organization\"\n                  name=\"issuer\"\n                  value={form.issuer}\n                  onChange={handleChange}\n                  error={!!errors.issuer}\n                  helperText={errors.issuer}\n                  required\n                  variant=\"outlined\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <Business sx={{ color: '#667eea' }} />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <StyledTextField\n                  fullWidth\n                  label=\"Certificate Title\"\n                  name=\"certificateTitle\"\n                  value={form.certificateTitle}\n                  onChange={handleChange}\n                  variant=\"outlined\"\n                  placeholder=\"e.g., Certificate of Completion, Certificate of Achievement\"\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <StyledTextField\n                  fullWidth\n                  label=\"Certificate Description\"\n                  name=\"paragraph\"\n                  value={form.paragraph}\n                  onChange={handleChange}\n                  error={!!errors.paragraph}\n                  helperText={errors.paragraph}\n                  multiline\n                  rows={4}\n                  placeholder=\"e.g., This is to certify that [Name] has successfully completed the [Course] with outstanding performance...\"\n                  required\n                  variant=\"outlined\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\" sx={{ alignSelf: 'flex-start', mt: 1 }}>\n                        <Description sx={{ color: '#667eea' }} />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n            </Grid>\n\n            {/* Action Buttons */}\n            <Box sx={{ display: 'flex', gap: 2, justifyContent: 'center', flexWrap: 'wrap' }}>\n              <Button\n                variant=\"outlined\"\n                onClick={() => navigate('/creation/size')}\n                startIcon={<ArrowBack />}\n                sx={{ \n                  borderRadius: 12,\n                  textTransform: 'none',\n                  fontWeight: 600,\n                  px: 3,\n                  py: 1.5,\n                  borderColor: '#667eea',\n                  color: '#667eea',\n                  '&:hover': {\n                    borderColor: '#5a6fd8',\n                    backgroundColor: 'rgba(102, 126, 234, 0.04)',\n                  }\n                }}\n              >\n                Back to Size\n              </Button>\n              \n              <StyledButton\n                type=\"submit\"\n                variant=\"contained\"\n                endIcon={<ArrowForward />}\n              >\n                Next: Choose Border\n              </StyledButton>\n            </Box>\n          </Box>\n        </StyledPaper>\n      </Container>\n    </StyledContainer>\n  );\n};\n\nexport default CertificateForm;","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { \r\n  Box, \r\n  Typography, \r\n  Paper, \r\n  Button, \r\n  Card,\r\n  CardContent,\r\n  CardActionArea,\r\n  Chip,\r\n  IconButton,\r\n  Tooltip\r\n} from '@mui/material';\r\nimport { \r\n  ArrowBack,\r\n  CheckCircle,\r\n  Favorite,\r\n  Star\r\n} from '@mui/icons-material';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst StyledContainer = styled(Box)(({ theme }) => ({\r\n  minHeight: '100vh',\r\n  background: '#f7fafd',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  padding: theme.spacing(3),\r\n  position: 'relative',\r\n  overflow: 'hidden',\r\n}));\r\n\r\nconst StyledPaper = styled(Paper)(({ theme }) => ({\r\n  padding: theme.spacing(2.5),\r\n  borderRadius: 8,\r\n  boxShadow: '0 2px 8px rgba(60, 80, 120, 0.08)',\r\n  background: '#f9f9fb',\r\n  border: '1px solid #e5e7eb',\r\n  maxWidth: 720,\r\n  width: '100%',\r\n  position: 'relative',\r\n  zIndex: 1,\r\n}));\r\n\r\nconst StyledCard = styled(Card)(({ theme, selected }) => ({\r\n  borderRadius: 8,\r\n  border: selected ? '1.5px solid #3a6ea5' : '1px solid #e0e0e0',\r\n  background: selected ? '#f0f4fa' : '#fff',\r\n  boxShadow: '0 1px 4px rgba(60, 80, 120, 0.06)',\r\n  transition: 'box-shadow 0.18s, border 0.18s, background 0.18s',\r\n  cursor: 'pointer',\r\n  position: 'relative',\r\n  overflow: 'visible',\r\n  '&:hover': {\r\n    boxShadow: '0 4px 16px rgba(60, 80, 120, 0.10)',\r\n    background: selected ? '#e3ecfa' : '#f7fafd',\r\n  },\r\n  '& .MuiCardActionArea-root': {\r\n    padding: theme.spacing(1.5),\r\n  },\r\n}));\r\n\r\nconst borders = [\r\n  { \r\n    name: 'Modern Minimal', \r\n    file: '/borders/Border1.png',\r\n    description: 'Clean and contemporary style with golden accents'\r\n  },\r\n  { \r\n    name: 'Golden Elegance', \r\n    file: '/borders/Border3.png',\r\n    description: 'Sophisticated golden border with metallic finish'\r\n  },\r\n  { \r\n    name: 'Floral Beauty', \r\n    file: '/borders/Border4.png',\r\n    description: 'Elegant floral motifs for special occasions'\r\n  },\r\n  { \r\n    name: 'Geometric Precision', \r\n    file: '/borders/Border5.png',\r\n    description: 'Sharp lines and geometric patterns'\r\n  },\r\n  { \r\n    name: 'Vintage Charm', \r\n    file: '/borders/Border6.png',\r\n    description: 'Classic vintage style with ornate details'\r\n  },\r\n  { \r\n    name: 'Corporate Professional', \r\n    file: '/borders/Border7.png',\r\n    description: 'Professional design for business certificates'\r\n  },\r\n  { \r\n    name: 'Artistic Flair', \r\n    file: '/borders/Border8.png',\r\n    description: 'Creative and artistic border design'\r\n  },\r\n  { \r\n    name: 'Luxury Premium', \r\n    file: '/borders/Border2.png',\r\n    description: 'Premium luxury design for special achievements'\r\n  },\r\n  { \r\n    name: 'Classic Elegance', \r\n    file: '/borders/Border9.png',\r\n    description: 'Timeless design with cream background, gold border, and red ribbons'\r\n  },\r\n];\r\n\r\nconst BorderPicker = () => {\r\n  const navigate = useNavigate();\r\n  const [selectedBorder, setSelectedBorder] = useState(null);\r\n\r\n  const handleSelect = (file) => {\r\n    setSelectedBorder(file);\r\n    // Add a small delay for better UX\r\n    setTimeout(() => {\r\n      localStorage.setItem('certificateBorder', file);\r\n      navigate('/creation/preview');\r\n    }, 300);\r\n  };\r\n\r\n  return (\r\n    <StyledContainer>\r\n      <StyledPaper elevation={0}>\r\n        <Box sx={{ textAlign: 'center', mb: 4 }}>\r\n          <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', mb: 2 }}>\r\n            <Typography variant=\"h3\" sx={{ fontWeight: 700, color: '#000000' }}>\r\n              Choose Your Border Design\r\n            </Typography>\r\n          </Box>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: 400, mb: 3, color: '#000000' }}>\r\n            Select from our collection of beautiful border designs\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Box sx={{\r\n          display: 'grid',\r\n          gridTemplateColumns: { xs: '1fr', sm: '1fr 1fr' },\r\n          gap: 2.5,\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          mb: 3,\r\n          maxWidth: 720,\r\n          mx: 'auto',\r\n        }}>\r\n          {borders.map((border) => (\r\n            <StyledCard\r\n              key={border.file}\r\n              selected={selectedBorder === border.file}\r\n              elevation={0}\r\n            >\r\n              <CardActionArea onClick={() => handleSelect(border.file)}>\r\n                <CardContent sx={{ textAlign: 'center', p: 0 }}>\r\n                  <Box sx={{ position: 'relative', mb: 1.5 }}>\r\n                    <img\r\n                      src={border.file}\r\n                      alt={border.name}\r\n                      style={{\r\n                        width: '100%',\r\n                        height: 90,\r\n                        objectFit: 'contain',\r\n                        borderRadius: 6,\r\n                        border: '1px solid #e0e0e0',\r\n                      }}\r\n                    />\r\n                    {selectedBorder === border.file && (\r\n                      <CheckCircle\r\n                        sx={{\r\n                          position: 'absolute',\r\n                          top: -8,\r\n                          right: -8,\r\n                          color: '#3a6ea5',\r\n                          fontSize: 22,\r\n                          backgroundColor: 'white',\r\n                          borderRadius: '50%',\r\n                          boxShadow: '0 1px 4px rgba(60, 80, 120, 0.10)',\r\n                        }}\r\n                      />\r\n                    )}\r\n                  </Box>\r\n                  <Typography variant=\"h6\" sx={{ fontWeight: 600, mb: 0.5, color: '#2d3748', fontSize: '1.08rem' }}>\r\n                    {border.name}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ mb: 1, fontSize: '0.97rem', color: '#000000', minHeight: 32 }}>\r\n                    {border.description}\r\n                  </Typography>\r\n                </CardContent>\r\n              </CardActionArea>\r\n            </StyledCard>\r\n          ))}\r\n        </Box>\r\n\r\n        <Box sx={{ textAlign: 'center' }}>\r\n          <Typography variant=\"body2\" sx={{ mb: 2, color: '#000000' }}>\r\n            💡 Tip: All borders are designed to work perfectly with your certificate content\r\n          </Typography>\r\n          \r\n          <Box sx={{ display: 'flex', gap: 2, justifyContent: 'center' }}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={() => navigate('/creation/form')}\r\n              startIcon={<ArrowBack />}\r\n              sx={{ \r\n                borderRadius: 10,\r\n                textTransform: 'none',\r\n                fontWeight: 500,\r\n                px: 3,\r\n                py: 1.5,\r\n                borderColor: '#3a6ea5',\r\n                color: '#3a6ea5',\r\n                '&:hover': {\r\n                  borderColor: '#2c5a8a',\r\n                  backgroundColor: 'rgba(58, 110, 165, 0.04)',\r\n                }\r\n              }}\r\n            >\r\n              Back to Form\r\n            </Button>\r\n            \r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={() => navigate('/dashboard')}\r\n              sx={{ \r\n                borderRadius: 10,\r\n                textTransform: 'none',\r\n                fontWeight: 500,\r\n                px: 3,\r\n                py: 1.5,\r\n                borderColor: '#3a6ea5',\r\n                color: '#3a6ea5',\r\n                '&:hover': {\r\n                  borderColor: '#2c5a8a',\r\n                  backgroundColor: 'rgba(58, 110, 165, 0.04)',\r\n                }\r\n              }}\r\n            >\r\n              Back to Dashboard\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </StyledPaper>\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nexport default BorderPicker;\r\n","import React, { useState, useEffect, useRef } from 'react';\n\n// Generate professional watermark layout patterns\nconst generateWatermarkLayout = (hash, pattern, certificateWidth = 800, certificateHeight = 600) => {\n  const patterns = {\n    'border-continuous': (hash, width, height) => {\n      const elements = [];\n      const hashWithSpace = hash + ' ';\n      const hashLength = hashWithSpace.length;\n      \n      // Define the working area (inside borders) - leave margin from edges\n      const margin = 80; // Distance from borders\n      const workingWidth = width - (2 * margin);\n      const workingHeight = height - (2 * margin);\n      \n      // Calculate how many complete hash repetitions fit in the working area\n      const horizontalChars = Math.floor(workingWidth / 8); // 8px per character\n      const verticalChars = Math.floor(workingHeight / 8);\n      \n      // Place hash in a grid pattern within the working area\n      for (let row = 0; row < Math.floor(verticalChars / 3); row++) {\n        for (let col = 0; col < horizontalChars; col++) {\n          const charIndex = (row * horizontalChars + col) % hashLength;\n          elements.push({\n            char: hashWithSpace[charIndex],\n            x: margin + (col * 8),\n            y: margin + (row * 24), // 24px spacing between rows\n            rotation: 0\n          });\n        }\n      }\n      \n      return elements;\n    },\n    \n    'horizontal-center': (hash, width, height) => {\n      const elements = [];\n      const centerY = height / 2;\n      const hashWithSpace = hash + ' ';\n      const hashLength = hashWithSpace.length;\n      const charsPerLine = Math.floor((width - 60) / 8); // 8px per character\n      \n      for (let i = 0; i < charsPerLine; i++) {\n        const charIndex = i % hashLength;\n        elements.push({\n          char: hashWithSpace[charIndex],\n          x: 30 + (i * 8),\n          y: centerY,\n          rotation: 0\n        });\n      }\n      \n      return elements;\n    },\n    \n    'vertical-center': (hash, width, height) => {\n      const elements = [];\n      const centerX = width / 2;\n      const hashWithSpace = hash + ' ';\n      const hashLength = hashWithSpace.length;\n      const charsPerColumn = Math.floor((height - 60) / 8); // 8px per character\n      \n      for (let i = 0; i < charsPerColumn; i++) {\n        const charIndex = i % hashLength;\n        elements.push({\n          char: hashWithSpace[charIndex],\n          x: centerX,\n          y: 30 + (i * 8),\n          rotation: 90\n        });\n      }\n      \n      return elements;\n    },\n    \n    'cross-pattern': (hash, width, height) => {\n      const elements = [];\n      const centerX = width / 2;\n      const centerY = height / 2;\n      const hashWithSpace = hash + ' ';\n      const hashLength = hashWithSpace.length;\n      \n      // Horizontal line\n      const horizontalChars = Math.floor((width - 60) / 8);\n      for (let i = 0; i < horizontalChars; i++) {\n        const charIndex = i % hashLength;\n        elements.push({\n          char: hashWithSpace[charIndex],\n          x: 30 + (i * 8),\n          y: centerY,\n          rotation: 0\n        });\n      }\n      \n      // Vertical line\n      const verticalChars = Math.floor((height - 60) / 8);\n      for (let i = 0; i < verticalChars; i++) {\n        const charIndex = i % hashLength;\n        elements.push({\n          char: hashWithSpace[charIndex],\n          x: centerX,\n          y: 30 + (i * 8),\n          rotation: 90\n        });\n      }\n      \n      return elements;\n    },\n    \n    'diagonal-lines': (hash, width, height) => {\n      const elements = [];\n      const centerX = width / 2;\n      const centerY = height / 2;\n      const hashWithSpace = hash + ' ';\n      const hashLength = hashWithSpace.length;\n      const diagonalLength = Math.min(width, height) / 2 - 50;\n      const charsPerDiagonal = Math.floor(diagonalLength / 8);\n      \n      // Diagonal from top-left to bottom-right\n      for (let i = 0; i < charsPerDiagonal; i++) {\n        const charIndex = i % hashLength;\n        const progress = i / charsPerDiagonal;\n        const x = centerX - diagonalLength/2 + (progress * diagonalLength);\n        const y = centerY - diagonalLength/2 + (progress * diagonalLength);\n        elements.push({\n          char: hashWithSpace[charIndex],\n          x: x,\n          y: y,\n          rotation: 45\n        });\n      }\n      \n      // Diagonal from top-right to bottom-left\n      for (let i = 0; i < charsPerDiagonal; i++) {\n        const charIndex = i % hashLength;\n        const progress = i / charsPerDiagonal;\n        const x = centerX + diagonalLength/2 - (progress * diagonalLength);\n        const y = centerY - diagonalLength/2 + (progress * diagonalLength);\n        elements.push({\n          char: hashWithSpace[charIndex],\n          x: x,\n          y: y,\n          rotation: -45\n        });\n      }\n      \n      return elements;\n    },\n    \n    'l-shaped': (hash, width, height) => {\n      const elements = [];\n      const hashWithSpace = hash + ' ';\n      const hashLength = hashWithSpace.length;\n      const lSize = Math.min(width, height) / 3;\n      \n      // Vertical part of L (left side)\n      const verticalChars = Math.floor(lSize / 8);\n      for (let i = 0; i < verticalChars; i++) {\n        const charIndex = i % hashLength;\n        elements.push({\n          char: hashWithSpace[charIndex],\n          x: 50,\n          y: 50 + (i * 8),\n          rotation: 90\n        });\n      }\n      \n      // Horizontal part of L (bottom)\n      const horizontalChars = Math.floor(lSize / 8);\n      for (let i = 0; i < horizontalChars; i++) {\n        const charIndex = i % hashLength;\n        elements.push({\n          char: hashWithSpace[charIndex],\n          x: 50 + (i * 8),\n          y: 50 + lSize,\n          rotation: 0\n        });\n      }\n      \n      return elements;\n    },\n    \n    't-shaped': (hash, width, height) => {\n      const elements = [];\n      const centerX = width / 2;\n      const centerY = height / 2;\n      const hashWithSpace = hash + ' ';\n      const hashLength = hashWithSpace.length;\n      const tSize = Math.min(width, height) / 4;\n      \n      // Top horizontal line of T\n      const horizontalChars = Math.floor(tSize / 8);\n      for (let i = 0; i < horizontalChars; i++) {\n        const charIndex = i % hashLength;\n        elements.push({\n          char: hashWithSpace[charIndex],\n          x: centerX - tSize/2 + (i * 8),\n          y: centerY - tSize/2,\n          rotation: 0\n        });\n      }\n      \n      // Vertical line of T\n      const verticalChars = Math.floor(tSize / 8);\n      for (let i = 0; i < verticalChars; i++) {\n        const charIndex = i % hashLength;\n        elements.push({\n          char: hashWithSpace[charIndex],\n          x: centerX,\n          y: centerY - tSize/2 + (i * 8),\n          rotation: 90\n        });\n      }\n      \n      return elements;\n    },\n    \n    'corner-focus': (hash, width, height) => {\n      const elements = [];\n      const hashWithSpace = hash + ' ';\n      const hashLength = hashWithSpace.length;\n      const cornerSize = 120;\n      \n      // Top-left corner\n      for (let i = 0; i < Math.floor(cornerSize / 8); i++) {\n        const charIndex = i % hashLength;\n        elements.push({\n          char: hashWithSpace[charIndex],\n          x: 30 + (i * 8),\n          y: 30,\n          rotation: 0\n        });\n        elements.push({\n          char: hashWithSpace[charIndex],\n          x: 30,\n          y: 38 + (i * 8),\n          rotation: 90\n        });\n      }\n      \n      // Top-right corner\n      for (let i = 0; i < Math.floor(cornerSize / 8); i++) {\n        const charIndex = i % hashLength;\n        elements.push({\n          char: hashWithSpace[charIndex],\n          x: width - 30 - (i * 8),\n          y: 30,\n          rotation: 0\n        });\n        elements.push({\n          char: hashWithSpace[charIndex],\n          x: width - 30,\n          y: 38 + (i * 8),\n          rotation: 90\n        });\n      }\n      \n      // Bottom-left corner\n      for (let i = 0; i < Math.floor(cornerSize / 8); i++) {\n        const charIndex = i % hashLength;\n        elements.push({\n          char: hashWithSpace[charIndex],\n          x: 30 + (i * 8),\n          y: height - 30,\n          rotation: 0\n        });\n        elements.push({\n          char: hashWithSpace[charIndex],\n          x: 30,\n          y: height - 38 - (i * 8),\n          rotation: 90\n        });\n      }\n      \n      // Bottom-right corner\n      for (let i = 0; i < Math.floor(cornerSize / 8); i++) {\n        const charIndex = i % hashLength;\n        elements.push({\n          char: hashWithSpace[charIndex],\n          x: width - 30 - (i * 8),\n          y: height - 30,\n          rotation: 0\n        });\n        elements.push({\n          char: hashWithSpace[charIndex],\n          x: width - 30,\n          y: height - 38 - (i * 8),\n          rotation: 90\n        });\n      }\n      \n      return elements;\n    }\n  };\n  \n  return patterns[pattern] ? patterns[pattern](hash, certificateWidth, certificateHeight) : patterns['border-continuous'](hash, certificateWidth, certificateHeight);\n};\n\n// Function to generate SHA-256 hash of username\nconst generateHash = async (username) => {\n  try {\n    const msgBuffer = new TextEncoder().encode(username);\n    const hashBuffer = await crypto.subtle.digest('SHA-256', msgBuffer);\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\n    return hashHex;\n  } catch (error) {\n    console.error('Error generating hash:', error);\n    // Fallback to a simple hash if crypto.subtle is not available\n    return username.split('').reduce((a, b) => {\n      a = ((a << 5) - a) + b.charCodeAt(0);\n      return a & a;\n    }, 0).toString(16);\n  }\n};\n\n// Function to get random watermark pattern\nconst getRandomPattern = () => {\n  const patterns = [\n    'border-continuous', \n    'horizontal-center', \n    'vertical-center', \n    'cross-pattern', \n    'diagonal-lines', \n    'l-shaped', \n    't-shaped', \n    'corner-focus'\n  ];\n  return patterns[Math.floor(Math.random() * patterns.length)];\n};\n\nconst Watermark = ({ \n  userName, \n  isVisible = false, \n  onWatermarkReady,\n  certificateSize = 'A4-Horizontal' \n}) => {\n  const [watermarkElements, setWatermarkElements] = useState([]);\n  const [currentHash, setCurrentHash] = useState('');\n  const [currentPattern, setCurrentPattern] = useState('');\n  const containerRef = useRef(null);\n\n  // Get certificate dimensions based on size\n  const getCertificateDimensions = (size) => {\n    const dimensions = {\n      'A4-Horizontal': { width: 800, height: 600 },\n      'A4-Vertical': { width: 600, height: 800 },\n      'A3-Horizontal': { width: 1000, height: 700 },\n      'A3-Vertical': { width: 700, height: 1000 }\n    };\n    return dimensions[size] || dimensions['A4-Horizontal'];\n  };\n\n  // Function to generate watermark when needed\n  const generateWatermark = async () => {\n    if (!userName || !isVisible) return;\n\n    try {\n      // Generate SHA-256 hash of username\n      const hash = await generateHash(userName);\n      \n      // Get random pattern for this generation\n      const pattern = getRandomPattern();\n      \n      // Get certificate dimensions\n      const dimensions = getCertificateDimensions(certificateSize);\n      \n      // Generate watermark layout\n      const layout = generateWatermarkLayout(hash, pattern, dimensions.width, dimensions.height);\n      \n      // Set state\n      setCurrentHash(hash);\n      setCurrentPattern(pattern);\n      setWatermarkElements(layout);\n      \n      // Notify parent component that watermark is ready\n      if (onWatermarkReady) {\n        onWatermarkReady(hash, pattern);\n      }\n      \n    } catch (error) {\n      console.error('Error generating watermark:', error);\n    }\n  };\n\n  // Effect to generate watermark when visibility changes\n  useEffect(() => {\n    if (isVisible) {\n      generateWatermark();\n    } else {\n      // Clear watermark when not visible\n      setWatermarkElements([]);\n      setCurrentHash('');\n      setCurrentPattern('');\n    }\n  }, [isVisible, userName, certificateSize]);\n\n  // Don't render anything if watermark is not visible\n  if (!isVisible || !watermarkElements.length || !currentHash) {\n    return null;\n  }\n\n  return (\n    <div\n      ref={containerRef}\n      style={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        pointerEvents: 'none',\n        userSelect: 'none',\n        zIndex: 1,\n      }}\n    >\n      {watermarkElements.map((element, index) => (\n        <div\n          key={index}\n          style={{\n            position: 'absolute',\n            left: element.x,\n            top: element.y,\n            fontSize: 12,\n            color: '#c8c8c8', // Light grey color for subtle watermark\n            fontFamily: '\"Courier New\", \"Monaco\", \"Consolas\", monospace',\n            fontWeight: 400,\n            transform: `rotate(${element.rotation}deg)`,\n            whiteSpace: 'nowrap',\n            letterSpacing: '0.5px',\n            opacity: 0.3, // Very subtle opacity\n          }}\n        >\n          {element.char}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Watermark;\n\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Watermark from './Watermark';\nimport { \n  Box, \n  Paper, \n  Button, \n  Typography, \n  Container,\n  Grid,\n  Card,\n  CardContent,\n  IconButton,\n  Slider,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  ToggleButton,\n  ToggleButtonGroup,\n  Tooltip\n} from '@mui/material';\nimport { \n  ArrowBack,\n  Download,\n  DragIndicator,\n  Settings,\n  ZoomIn,\n  ZoomOut,\n  Edit,\n  FormatAlignLeft,\n  FormatAlignCenter,\n  FormatAlignRight,\n  QrCode\n} from '@mui/icons-material';\nimport { styled } from '@mui/material/styles';\nimport Draggable from 'react-draggable';\nimport ContentEditable from 'react-contenteditable';\nimport html2canvas from 'html2canvas';\nimport QRCode from 'qrcode';\n\n\n\nconst StyledContainer = styled(Box)(({ theme }) => ({\n  minHeight: '100vh',\n  background: 'linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%)',\n  padding: theme.spacing(3),\n  position: 'relative',\n  overflow: 'hidden',\n}));\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  borderRadius: 24,\n  boxShadow: '0 20px 40px rgba(0, 0, 0, 0.1)',\n  background: 'rgba(255, 255, 255, 0.95)',\n  backdropFilter: 'blur(10px)',\n  border: '1px solid rgba(255, 255, 255, 0.2)',\n  position: 'relative',\n  zIndex: 1,\n  animation: 'slideUp 0.6s ease-out',\n  '@keyframes slideUp': {\n    from: {\n      opacity: 0,\n      transform: 'translateY(30px)',\n    },\n    to: {\n      opacity: 1,\n      transform: 'translateY(0)',\n    },\n  },\n}));\n\nconst DraggableText = styled(Box)(({ theme, selected }) => ({\n  position: 'absolute',\n  cursor: 'move',\n  userSelect: 'none',\n  minWidth: '50px',\n  minHeight: '20px',\n  padding: selected ? '4px' : '2px',\n  border: selected ? '2px dashed #667eea' : '2px solid transparent',\n  borderRadius: selected ? '4px' : '0',\n  backgroundColor: selected ? 'rgba(102, 126, 234, 0.1)' : 'transparent',\n  '&:hover': {\n    border: '2px dashed #667eea',\n    backgroundColor: 'rgba(102, 126, 234, 0.05)',\n  },\n  '& .content-editable': {\n    outline: 'none',\n    cursor: 'text',\n    minHeight: '20px',\n    '&:focus': {\n      outline: 'none',\n    },\n  },\n}));\n\nconst CertificatePreview = () => {\n  const navigate = useNavigate();\n  const [certificateData, setCertificateData] = useState(null);\n  const [borderImage, setBorderImage] = useState('');\n  const [certificateSize, setCertificateSize] = useState('A4-Horizontal');\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [selectedElement, setSelectedElement] = useState(null);\n  const [zoom, setZoom] = useState(1);\n  const [isEditing, setIsEditing] = useState(true);\n  const certificateRef = useRef(null);\n\n  // Bulk generation state\n  const [isBulkGenerating, setIsBulkGenerating] = useState(false);\n  const [bulkMode, setBulkMode] = useState(false);\n  const [isSaved, setIsSaved] = useState(false);\n  \n  // Watermark state for download\n  const [showWatermark, setShowWatermark] = useState(false);\n  const [watermarkHash, setWatermarkHash] = useState('');\n  const [watermarkPattern, setWatermarkPattern] = useState('');\n  \n  // QR Code state\n  const [qrCodeDataURL, setQrCodeDataURL] = useState('');\n\n  // Define certificate dimensions based on size\n  const getCertificateDimensions = (size) => {\n    const dimensions = {\n      'A4-Horizontal': { width: 800, height: 600 },\n      'A4-Vertical': { width: 600, height: 800 },\n      'A3-Horizontal': { width: 1000, height: 700 },\n      'A3-Vertical': { width: 700, height: 1000 }\n    };\n    return dimensions[size] || dimensions['A4-Horizontal'];\n  };\n\n  // Adjust element positions based on certificate size\n  const getElementPositions = (size) => {\n    const dimensions = getCertificateDimensions(size);\n    const isHorizontal = size.includes('Horizontal');\n    \n    if (isHorizontal) {\n      return {\n        title: { x: (dimensions.width - 400) / 2, y: 60 },\n        intro: { x: (dimensions.width - 300) / 2, y: 140 },\n        name: { x: (dimensions.width - 200) / 2, y: 180 },\n        paragraph: { x: (dimensions.width - 400) / 2, y: 240 },\n        course: { x: (dimensions.width - 300) / 2, y: 280 },\n        date: { x: (dimensions.width - 200) / 2, y: 340 },\n        issuer: { x: (dimensions.width - 240) / 2, y: 380 },\n        qr: { x: dimensions.width - 160, y: dimensions.height - 160 },\n      };\n    } else {\n      return {\n        title: { x: (dimensions.width - 400) / 2, y: 80 },\n        intro: { x: (dimensions.width - 300) / 2, y: 180 },\n        name: { x: (dimensions.width - 200) / 2, y: 240 },\n        paragraph: { x: (dimensions.width - 400) / 2, y: 320 },\n        course: { x: (dimensions.width - 300) / 2, y: 380 },\n        date: { x: (dimensions.width - 200) / 2, y: 440 },\n        issuer: { x: (dimensions.width - 240) / 2, y: 500 },\n        qr: { x: dimensions.width - 160, y: dimensions.height - 160 },\n      };\n    }\n  };\n\n  const [elements, setElements] = useState(() => {\n    // Get initial positions based on default certificate size\n    const initialPositions = getElementPositions('A4-Horizontal');\n    \n    return {\n    title: {\n      text: 'Certificate of Completion',\n        position: initialPositions.title,\n      style: { \n        fontSize: 40, \n        fontWeight: 'bold', \n        color: '#1a237e',\n        fontFamily: 'Roboto, sans-serif',\n        textAlign: 'center'\n      }\n    },\n    intro: {\n      text: 'This is to certify that',\n        position: initialPositions.intro,\n      style: { \n        fontSize: 24, \n        color: '#424242',\n        fontFamily: 'Roboto, sans-serif',\n        textAlign: 'center'\n      }\n    },\n    name: {\n      text: 'John Doe',\n        position: initialPositions.name,\n      style: { \n        fontSize: 32, \n        fontWeight: 'bold', \n        color: '#2c3e50',\n        fontFamily: 'Roboto, sans-serif',\n        textAlign: 'center'\n      }\n    },\n    paragraph: {\n      text: 'has successfully completed the course',\n        position: initialPositions.paragraph,\n      style: { \n        fontSize: 24, \n        color: '#424242',\n        fontFamily: 'Roboto, sans-serif',\n        textAlign: 'center'\n      }\n    },\n    course: {\n      text: 'React JS Masterclass',\n        position: initialPositions.course,\n      style: { \n        fontSize: 28, \n        fontWeight: 'bold', \n        color: '#1976d2',\n        fontFamily: 'Roboto, sans-serif',\n        textAlign: 'center'\n      }\n    },\n    date: {\n      text: 'on 26-07-2025',\n        position: initialPositions.date,\n      style: { \n        fontSize: 20, \n        color: '#616161',\n        fontFamily: 'Roboto, sans-serif',\n        textAlign: 'center'\n      }\n    },\n    issuer: {\n      text: 'Issued by: Your Institute',\n        position: initialPositions.issuer,\n      style: { \n        fontSize: 18, \n        color: '#757575',\n        fontFamily: 'Roboto, sans-serif',\n        textAlign: 'center'\n      }\n      },\n      qr: {\n        text: 'QR Code',\n        position: initialPositions.qr,\n        style: { \n          fontSize: 12, \n          color: '#000000',\n          fontFamily: 'Roboto, sans-serif',\n          textAlign: 'center'\n        },\n        size: 120\n      }\n    };\n  });\n\n  useEffect(() => {\n    const savedData = localStorage.getItem('certificateData');\n    const savedBorder = localStorage.getItem('certificateBorder');\n    const savedSize = localStorage.getItem('certificateSize');\n    \n    // Check if we're in bulk mode\n    const bulkModeActive = sessionStorage.getItem('bulkMode') === 'true';\n    setBulkMode(bulkModeActive);\n    \n    if (savedData) {\n      const data = JSON.parse(savedData);\n      setCertificateData(data);\n      \n      // Update elements with the saved certificate data\n      setElements(prev => ({\n        ...prev,\n        title: { ...prev.title, text: data.certificateTitle || 'Certificate of Completion' },\n        name: { ...prev.name, text: data.name || 'John Doe' },\n        course: { ...prev.course, text: data.course || 'React JS Masterclass' },\n        date: { ...prev.date, text: `on ${data.date || '26-07-2025'}` },\n        issuer: { ...prev.issuer, text: `Issued by: ${data.issuer || 'Your Institute'}` },\n        paragraph: { ...prev.paragraph, text: data.paragraph || 'has successfully completed the course' },\n      }));\n    }\n    \n    if (savedBorder) {\n      setBorderImage(savedBorder);\n    }\n\n    if (savedSize) {\n      setCertificateSize(savedSize);\n      \n      // Update element positions based on the certificate size\n      const newPositions = getElementPositions(savedSize);\n      setElements(prev => {\n        const updatedElements = { ...prev };\n        Object.keys(newPositions).forEach(key => {\n          if (updatedElements[key]) {\n            updatedElements[key] = {\n              ...updatedElements[key],\n              position: newPositions[key]\n            };\n          }\n        });\n        return updatedElements;\n      });\n    }\n  }, []);\n\n  // Generate QR code when certificate data or elements change\n  useEffect(() => {\n    const generateQR = async () => {\n      // Generate QR code whenever certificate data or elements change\n      const qrData = await generateQRCode(certificateData || {});\n      setQrCodeDataURL(qrData);\n    };\n    \n    generateQR();\n  }, [certificateData, elements]);\n\n  // Update element positions when certificate size changes\n  useEffect(() => {\n    if (certificateSize) {\n      const newPositions = getElementPositions(certificateSize);\n      setElements(prev => {\n        const updatedElements = { ...prev };\n        Object.keys(newPositions).forEach(key => {\n          if (updatedElements[key]) {\n            updatedElements[key] = {\n              ...updatedElements[key],\n              position: newPositions[key]\n            };\n          }\n        });\n        return updatedElements;\n      });\n    }\n  }, [certificateSize]);\n\n  const handleDrag = useCallback((key, e, data) => {\n    setElements((prev) => ({\n      ...prev,\n      [key]: {\n        ...prev[key],\n        position: { x: data.x, y: data.y },\n      },\n    }));\n  }, []);\n\n  const handleTextChange = useCallback((key, e) => {\n    setElements((prev) => ({\n      ...prev,\n      [key]: {\n        ...prev[key],\n        text: e.target.value,\n      },\n    }));\n    \n    // Regenerate QR code when text changes to ensure it's always up-to-date\n    setTimeout(() => {\n      generateQRCode(certificateData || {}).then(setQrCodeDataURL);\n    }, 100);\n  }, [certificateData]);\n\n  const handleElementClick = useCallback((key) => {\n    setSelectedElement(key);\n  }, []);\n\n  const updateElementStyle = (key, property, value) => {\n    setElements(prev => ({\n      ...prev,\n      [key]: {\n        ...prev[key],\n        style: {\n          ...prev[key].style,\n          [property]: value\n        }\n      }\n    }));\n  };\n\n  // Function to manually refresh QR code\n  const refreshQRCode = async () => {\n    const qrData = await generateQRCode(certificateData || {});\n    setQrCodeDataURL(qrData);\n  };\n\n  // Function to show QR code content\n  const showQRCodeContent = () => {\n    const currentElements = elements;\n    const qrData = {\n      certificateType: currentElements.title?.text || 'Certificate of Completion',\n      recipientName: currentElements.name?.text || 'John Doe',\n      courseName: currentElements.course?.text || 'React JS Masterclass',\n      completionDate: currentElements.date?.text || '26-07-2025',\n      issuingInstitute: currentElements.issuer?.text || 'Your Institute',\n      certificateId: `CERT-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n      issuedOn: new Date().toISOString().split('T')[0],\n      verificationNote: 'Scan this QR code to verify certificate authenticity'\n    };\n    \n    const readableText = `CERTIFICATE OF COMPLETION\n\nRecipient: ${qrData.recipientName}\nCourse: ${qrData.courseName}\nDate: ${qrData.completionDate}\nIssued by: ${qrData.issuingInstitute}\nCertificate ID: ${qrData.certificateId}\nIssued on: ${qrData.issuedOn}\n\n${qrData.verificationNote}`;\n    \n    alert(`QR Code Content:\\n\\n${readableText}\\n\\nThis information is encoded directly in the QR code and will be displayed when scanned.`);\n  };\n\n  // Function to generate QR code with user details\n  const generateQRCode = async (userDetails) => {\n    try {\n      // Get current certificate elements for complete information\n      const currentElements = elements;\n      \n      // Create comprehensive certificate data for QR code\n      const qrData = {\n        certificateType: currentElements.title?.text || 'Certificate of Completion',\n        recipientName: currentElements.name?.text || userDetails.name || 'John Doe',\n        courseName: currentElements.course?.text || userDetails.course || 'React JS Masterclass',\n        completionDate: currentElements.date?.text || userDetails.date || '26-07-2025',\n        issuingInstitute: currentElements.issuer?.text || userDetails.issuer || 'Your Institute',\n        certificateId: `CERT-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n        issuedOn: new Date().toISOString().split('T')[0], // Current date in YYYY-MM-DD format\n        verificationNote: 'Scan this QR code to verify certificate authenticity'\n      };\n      \n      // Convert to human-readable text format for better scanning experience\n      const readableText = `CERTIFICATE OF COMPLETION\n\nRecipient: ${qrData.recipientName}\nCourse: ${qrData.courseName}\nDate: ${qrData.completionDate}\nIssued by: ${qrData.issuingInstitute}\nCertificate ID: ${qrData.certificateId}\nIssued on: ${qrData.issuedOn}\n\n${qrData.verificationNote}`;\n      \n      // Log the QR code content for debugging (remove in production)\n      console.log('QR Code Content:', readableText);\n      console.log('QR Code Data Object:', qrData);\n      \n      const qrCodeDataURL = await QRCode.toDataURL(readableText, {\n        width: 120,\n        margin: 2,\n        color: {\n          dark: '#000000',\n          light: '#FFFFFF'\n        },\n        errorCorrectionLevel: 'M' // Medium error correction for better scanning\n      });\n      \n      return qrCodeDataURL;\n    } catch (error) {\n      console.error('Error generating QR code:', error);\n      return null;\n    }\n  };\n\n  const handleSave = async () => {\n    // Save current certificate state\n    const certificateState = {\n      elements,\n      certificateSize,\n      borderImage,\n      certificateData\n    };\n    localStorage.setItem('certificateState', JSON.stringify(certificateState));\n    setIsSaved(true);\n    setIsEditing(false);\n    // Show saved message briefly\n    setTimeout(() => setIsSaved(false), 2000);\n  };\n\n  const handleBulkGenerate = async () => {\n    if (!bulkMode) {\n      alert('No bulk file found. Please go back to bulk upload and try again.');\n      return;\n    }\n\n    setIsBulkGenerating(true);\n    try {\n      // Build a compact layout object consumed by backend PDF builder\n      const compactElements = {};\n      Object.entries(elements).forEach(([key, el]) => {\n        compactElements[key] = {\n          position: el.position,\n          style: el.style,\n        };\n        // Provide the text container width used in preview so backend can align like the browser\n        const defaultBoxWidths = {\n          title: 400, intro: 300, name: 200, paragraph: 400, course: 300, date: 200, issuer: 240,\n        };\n        if (key !== 'qr') {\n          compactElements[key].boxWidth = defaultBoxWidths[key] || 300;\n        }\n        // Add size property for QR code\n        if (key === 'qr' && el.size) {\n          compactElements[key].size = el.size;\n        }\n      });\n      \n      // Get border information - avoid converting to base64 to prevent large requests\n      const borderSrc = localStorage.getItem('certificateBorder') || '';\n      let borderAbsolute = '';\n      if (borderSrc) {\n        borderAbsolute = /^https?:/i.test(borderSrc)\n          ? borderSrc\n          : `${window.location.origin}${borderSrc.startsWith('/') ? '' : '/'}${borderSrc}`;\n      }\n\n      // Create a lightweight layout object without large base64 data\n      const layout = {\n        elements: compactElements,\n        borderImageUrl: borderSrc,\n        borderImageUrlAbsolute: borderAbsolute,\n        // Remove borderImageDataUrl to prevent large requests\n        referenceDimensions: getCertificateDimensions(certificateSize),\n      };\n\n      // Get bulk file from session storage\n      const bulkFileObjectUrl = sessionStorage.getItem('bulkFileObjectUrl');\n      if (!bulkFileObjectUrl) {\n        throw new Error('Bulk file not found. Please re-upload your file.');\n      }\n\n      // Rehydrate file from ObjectURL or from Base64 fallback\n      let fileBlob;\n      try {\n        fileBlob = await (await fetch(bulkFileObjectUrl)).blob();\n      } catch (_) {\n        const b64 = sessionStorage.getItem('bulkFileBase64');\n        if (!b64) throw new Error('Bulk dataset missing. Please re-upload.');\n        const byteChars = atob(b64);\n        const byteNums = new Array(byteChars.length);\n        for (let i = 0; i < byteChars.length; i++) byteNums[i] = byteChars.charCodeAt(i);\n        const byteArray = new Uint8Array(byteNums);\n        fileBlob = new Blob([byteArray], { type: 'application/octet-stream' });\n      }\n\n      // Check file size before sending (limit to 50MB to be safe)\n      const maxSize = 50 * 1024 * 1024; // 50MB\n      if (fileBlob.size > maxSize) {\n        throw new Error(`File size (${(fileBlob.size / 1024 / 1024).toFixed(1)}MB) exceeds the maximum allowed size of 50MB. Please use a smaller file.`);\n      }\n      \n      const fileName = sessionStorage.getItem('bulkFileName') || 'bulk.csv';\n      const form = new FormData();\n      form.append('file', fileBlob, fileName);\n      form.append('layout', JSON.stringify(layout));\n\n      console.log('Sending bulk generation request with layout:', layout);\n      console.log('Certificate size:', certificateSize);\n      console.log('Reference dimensions:', getCertificateDimensions(certificateSize));\n      console.log('Elements:', elements);\n      console.log('File size:', (fileBlob.size / 1024 / 1024).toFixed(2), 'MB');\n\n      const apiBaseUrl = process.env.REACT_APP_API_BASE_URL || 'http://127.0.0.1:5000';\n      const res = await fetch(`${apiBaseUrl}/bulk_generate`, { method: 'POST', body: form });\n      \n      if (!res.ok) {\n        const text = await res.text();\n        console.error('Bulk generation failed with status:', res.status, 'Response:', text);\n        throw new Error(`Bulk generation failed: ${text}`);\n      }\n      \n      // Download the ZIP file\n      const zipBlob = await res.blob();\n      const url = window.URL.createObjectURL(zipBlob);\n      const a = document.createElement('a');\n      a.href = url;\n      const ts = new Date();\n      const pad = (n) => String(n).padStart(2, '0');\n      const stamp = `${ts.getFullYear()}${pad(ts.getMonth()+1)}${pad(ts.getDate())}_${pad(ts.getHours())}${pad(ts.getMinutes())}${pad(ts.getSeconds())}`;\n      a.download = `certificates_${stamp}.zip`;\n      a.click();\n      \n      // Clean up\n      window.URL.revokeObjectURL(url);\n      \n      // Show success message\n      alert(`Successfully generated and downloaded all certificates!`);\n      \n    } catch (e) {\n      console.error('Bulk generation error:', e);\n      alert(`Error generating certificates: ${e.message}`);\n    } finally {\n      setIsBulkGenerating(false);\n    }\n  };\n\n  const handleDownload = async () => {\n    setIsGenerating(true);\n    try {\n      if (certificateRef.current) {\n        // Show watermark - it will generate hash and pattern automatically\n        setShowWatermark(true);\n        \n        // Wait for watermark to be generated and rendered\n        await new Promise((resolve) => setTimeout(resolve, 200));\n        \n        // Capture the certificate with watermark\n        const canvas = await html2canvas(certificateRef.current, {\n          useCORS: true,\n          backgroundColor: null,\n          scale: 2,\n        });\n        \n        // Remove watermark from DOM immediately after capture\n        setShowWatermark(false);\n        setWatermarkHash('');\n        setWatermarkPattern('');\n        \n        // Download the image\n        const link = document.createElement('a');\n        link.download = `certificate_${Date.now()}.png`;\n        link.href = canvas.toDataURL();\n        link.click();\n      }\n    } catch (error) {\n      console.error('Error capturing certificate:', error);\n      // Ensure watermark is removed even if error occurs\n      setShowWatermark(false);\n      setWatermarkHash('');\n      setWatermarkPattern('');\n    }\n    setIsGenerating(false);\n  };\n\n  if (!certificateData) {\n    return (\n      <StyledContainer>\n        <Container maxWidth=\"md\">\n          <StyledPaper sx={{ p: 4, textAlign: 'center' }}>\n            <Typography variant=\"h5\" sx={{ mb: 2 }}>\n              No certificate data found\n            </Typography>\n            <Button \n              variant=\"contained\" \n              onClick={() => navigate('/creation/size')}\n              sx={{ mt: 2 }}\n            >\n              Start Creating\n            </Button>\n          </StyledPaper>\n        </Container>\n      </StyledContainer>\n    );\n  }\n\n  const selectedElementData = selectedElement ? elements[selectedElement] : null;\n\n  return (\n    <StyledContainer>\n      <Container maxWidth=\"xl\">\n        <StyledPaper sx={{ p: 4 }}>\n          <Box sx={{ textAlign: 'center', mb: 4 }}>\n            <Typography variant=\"h3\" sx={{ fontWeight: 700, color: '#000000' }}>\n              Certificate Designer\n            </Typography>\n            <Typography variant=\"h6\" sx={{ fontWeight: 400, mb: 3, color: '#000000' }}>\n              Drag, edit, and customize your certificate in real-time\n            </Typography>\n          </Box>\n\n          <Grid container spacing={4}>\n            {/* Left Panel - Controls */}\n            <Grid item xs={12} lg={4}>\n              <Box sx={{ position: 'sticky', top: 20 }}>\n                <Card sx={{ mb: 3, borderRadius: 3 }}>\n                  <CardContent>\n                    <Typography variant=\"h6\" sx={{ fontWeight: 600, mb: 2, color: '#2d3748' }}>\n                      <DragIndicator sx={{ mr: 1, verticalAlign: 'middle' }} />\n                      Text Elements\n                    </Typography>\n                    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n                      {Object.keys(elements).map((key) => (\n                        <Button\n                          key={key}\n                          variant={selectedElement === key ? 'contained' : 'outlined'}\n                          size=\"small\"\n                          onClick={() => setSelectedElement(key)}\n                          sx={{\n                            justifyContent: 'flex-start',\n                            textTransform: 'none',\n                            backgroundColor: selectedElement === key ? '#667eea' : 'transparent',\n                            '&:hover': {\n                              backgroundColor: selectedElement === key ? '#5a6fd8' : 'rgba(102, 126, 234, 0.04)',\n                            }\n                          }}\n                        >\n                          {key.charAt(0).toUpperCase() + key.slice(1)}\n                        </Button>\n                      ))}\n                    </Box>\n                  </CardContent>\n                </Card>\n\n                {selectedElementData && (\n                  <Card sx={{ mb: 3, borderRadius: 3 }}>\n                    <CardContent>\n                      <Typography variant=\"h6\" sx={{ fontWeight: 600, mb: 2, color: '#2d3748' }}>\n                        <Settings sx={{ mr: 1, verticalAlign: 'middle' }} />\n                        Text Properties\n                      </Typography>\n                      \n                      <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n                        <Box>\n                          <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                            Font Size: {selectedElementData.style.fontSize}px\n                          </Typography>\n                          <Slider\n                            value={parseInt(selectedElementData.style.fontSize)}\n                            onChange={(e, value) => updateElementStyle(selectedElement, 'fontSize', value + 'px')}\n                            min={12}\n                            max={72}\n                            sx={{ color: '#667eea' }}\n                          />\n                        </Box>\n\n                        <FormControl fullWidth size=\"small\">\n                          <InputLabel>Font Family</InputLabel>\n                          <Select\n                            value={selectedElementData.style.fontFamily?.split(',')[0] || 'Roboto'}\n                            onChange={(e) => updateElementStyle(selectedElement, 'fontFamily', e.target.value + ', sans-serif')}\n                            label=\"Font Family\"\n                          >\n                            <MenuItem value=\"Roboto\">Roboto</MenuItem>\n                            <MenuItem value=\"Poppins\">Poppins</MenuItem>\n                            <MenuItem value=\"Inter\">Inter</MenuItem>\n                            <MenuItem value=\"Open Sans\">Open Sans</MenuItem>\n                            <MenuItem value=\"Lato\">Lato</MenuItem>\n                            <MenuItem value=\"Montserrat\">Montserrat</MenuItem>\n                            <MenuItem value=\"Playfair Display\">Playfair Display</MenuItem>\n                          </Select>\n                        </FormControl>\n\n                        <Box>\n                          <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                            Text Color\n                          </Typography>\n                          <input\n                            type=\"color\"\n                            value={selectedElementData.style.color}\n                            onChange={(e) => updateElementStyle(selectedElement, 'color', e.target.value)}\n                            style={{ width: '100%', height: 40, borderRadius: 4, border: '1px solid #ddd' }}\n                          />\n                        </Box>\n\n                        <Box>\n                          <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                            Text Alignment\n                          </Typography>\n                          <ToggleButtonGroup\n                            value={selectedElementData.style.textAlign || 'center'}\n                            exclusive\n                            onChange={(e, value) => value && updateElementStyle(selectedElement, 'textAlign', value)}\n                            size=\"small\"\n                          >\n                            <ToggleButton value=\"left\">\n                              <FormatAlignLeft />\n                            </ToggleButton>\n                            <ToggleButton value=\"center\">\n                              <FormatAlignCenter />\n                            </ToggleButton>\n                            <ToggleButton value=\"right\">\n                              <FormatAlignRight />\n                            </ToggleButton>\n                          </ToggleButtonGroup>\n                        </Box>\n\n                        <Box>\n                          <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                            Font Weight\n                          </Typography>\n                          <ToggleButtonGroup\n                            value={selectedElementData.style.fontWeight || 'normal'}\n                            exclusive\n                            onChange={(e, value) => value && updateElementStyle(selectedElement, 'fontWeight', value)}\n                            size=\"small\"\n                          >\n                            <ToggleButton value=\"normal\">Normal</ToggleButton>\n                            <ToggleButton value=\"bold\">Bold</ToggleButton>\n                          </ToggleButtonGroup>\n                        </Box>\n\n                        {/* QR Code Size Control */}\n                        {selectedElement === 'qr' && (\n                          <Box>\n                            <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                              QR Code Size: {selectedElementData.size || 120}px\n                            </Typography>\n                            <Slider\n                              value={selectedElementData.size || 120}\n                              onChange={(e, value) => {\n                                setElements(prev => ({\n                                  ...prev,\n                                  [selectedElement]: {\n                                    ...prev[selectedElement],\n                                    size: value\n                                  }\n                                }));\n                              }}\n                              min={60}\n                              max={200}\n                              step={10}\n                              sx={{ color: '#667eea' }}\n                            />\n                          </Box>\n                        )}\n                      </Box>\n                    </CardContent>\n                  </Card>\n                )}\n\n                {/* Actions Card */}\n                <Card sx={{ borderRadius: 3 }}>\n                  <CardContent>\n                    <Typography variant=\"h6\" sx={{ fontWeight: 600, mb: 3, color: '#2d3748' }}>\n                      Actions\n                    </Typography>\n                    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n                      {isEditing ? (\n                        <Button\n                          variant=\"outlined\"\n                          fullWidth\n                          onClick={handleSave}\n                          disabled={isSaved}\n                          sx={{\n                            borderRadius: 2,\n                            textTransform: 'none',\n                            fontWeight: 600,\n                            py: 1.5,\n                            borderColor: isSaved ? '#4caf50' : '#667eea',\n                            color: isSaved ? '#4caf50' : '#667eea',\n                            '&:hover': {\n                              borderColor: isSaved ? '#45a049' : '#5a6fd8',\n                              backgroundColor: isSaved ? 'rgba(76, 175, 80, 0.04)' : 'rgba(102, 126, 234, 0.04)',\n                            }\n                          }}\n                        >\n                          {isSaved ? '✓ Saved' : 'Save Layout'}\n                        </Button>\n                      ) : (\n                        <IconButton\n                          color=\"primary\"\n                          onClick={() => setIsEditing(true)}\n                          sx={{ alignSelf: 'center', border: '1px solid #667eea', borderRadius: 2 }}\n                        >\n                          <Edit />\n                        </IconButton>\n                      )}\n\n                      {/* Bulk Generation Button - Only show when in bulk mode and layout is saved */}\n                      {bulkMode && !isEditing && (\n                        <Button\n                          variant=\"contained\"\n                          fullWidth\n                          onClick={handleBulkGenerate}\n                          disabled={isBulkGenerating}\n                          startIcon={<Download />}\n                          sx={{\n                            borderRadius: 2,\n                            textTransform: 'none',\n                            fontWeight: 600,\n                            py: 1.5,\n                            backgroundColor: '#4caf50',\n                            '&:hover': {\n                              backgroundColor: '#45a049',\n                            },\n                            '&:disabled': {\n                              backgroundColor: '#cccccc',\n                            }\n                          }}\n                        >\n                          {isBulkGenerating ? 'Generating...' : 'Download All Certificates'}\n                        </Button>\n                      )}\n\n                      {/* Single Certificate Download Button - Only show when not in bulk mode */}\n                      {!bulkMode && !isEditing && (\n                        <Button\n                          variant=\"contained\"\n                          fullWidth\n                          onClick={handleDownload}\n                          disabled={isGenerating}\n                          startIcon={<Download />}\n                          sx={{\n                            borderRadius: 2,\n                            textTransform: 'none',\n                            fontWeight: 600,\n                            py: 1.5,\n                            backgroundColor: '#667eea',\n                            '&:hover': {\n                              backgroundColor: '#5a6fd8',\n                            }\n                          }}\n                        >\n                          {isGenerating ? 'Generating...' : 'Download Certificate'}\n                        </Button>\n                      )}\n\n                      {/* Bulk Mode Indicator */}\n                      {bulkMode && (\n                        <Box sx={{ \n                          p: 2, \n                          backgroundColor: '#e8f5e8', \n                          borderRadius: 2, \n                          border: '1px solid #4caf50',\n                          textAlign: 'center'\n                        }}>\n                          <Typography variant=\"body2\" sx={{ color: '#2e7d32', fontWeight: 500 }}>\n                            📁 Bulk Mode Active\n                          </Typography>\n                          <Typography variant=\"caption\" sx={{ color: '#388e3c' }}>\n                            Save your layout first, then download all certificates\n                          </Typography>\n                        </Box>\n                      )}\n                    </Box>\n                  </CardContent>\n                </Card>\n              </Box>\n            </Grid>\n\n            {/* Right Panel - Certificate Preview */}\n            <Grid item xs={12} lg={8}>\n              <Box sx={{ textAlign: 'center' }}>\n                <Box sx={{ \n                  display: 'flex', \n                  justifyContent: 'center', \n                  alignItems: 'center',\n                  minHeight: '600px',\n                  overflow: 'auto',\n                  p: 2,\n                  maxHeight: '70vh',\n                }}>\n                  <Paper\n                    ref={certificateRef}\n                    data-certificate-preview=\"true\"\n                    elevation={8}\n                    sx={{\n                      width: getCertificateDimensions(certificateSize).width,\n                      height: getCertificateDimensions(certificateSize).height,\n                      position: 'relative',\n                      overflow: 'hidden',\n                      background: borderImage ? `url(${borderImage})` : '#fff',\n                      backgroundSize: '100% 100%',\n                      backgroundPosition: 'left top',\n                      backgroundRepeat: 'no-repeat',\n                      borderRadius: 3,\n                      border: '2px solid #e0e0e0',\n                      transform: `scale(${zoom})`,\n                      transformOrigin: 'center',\n                      boxShadow: '0 10px 30px rgba(0, 0, 0, 0.2)',\n                      backgroundColor: borderImage ? 'transparent' : '#fff',\n                      maxWidth: '100%',\n                      maxHeight: '100%',\n                      flexShrink: 0,\n                    }}\n                  >\n                    {/* Fallback border if no image is selected */}\n                    {!borderImage && (\n                      <Box\n                        sx={{\n                          position: 'absolute',\n                          top: 0,\n                          left: 0,\n                          right: 0,\n                          bottom: 0,\n                          border: '12px solid #667eea',\n                          borderRadius: 2,\n                          background: 'linear-gradient(135deg, #f8faff 0%, #e8f2ff 100%)',\n                          zIndex: 0,\n                        }}\n                      />\n                    )}\n                    \n                    {/* Watermark component - only shown during download */}\n                    {showWatermark && (\n                      <Watermark \n                        userName={certificateData?.name || elements?.name?.text || 'John Doe'}\n                        isVisible={showWatermark}\n                        onWatermarkReady={(hash, pattern) => {\n                          setWatermarkHash(hash);\n                          setWatermarkPattern(pattern);\n                        }}\n                        certificateSize={certificateSize}\n                      />\n                    )}\n                    \n                    {Object.entries(elements).map(([key, element]) => (\n                      isEditing ? (\n                        <Draggable\n                          key={key}\n                          position={element.position}\n                          onStop={(e, data) => handleDrag(key, e, data)}\n                          bounds=\"parent\"\n                          disabled={!isEditing}\n                        >\n                          <DraggableText\n                            selected={selectedElement === key}\n                            onClick={() => handleElementClick(key)}\n                            sx={{\n                              zIndex: 1,\n                              position: 'absolute',\n                              pointerEvents: isEditing ? 'auto' : 'none',\n                            }}\n                          >\n                            {key === 'qr' ? (\n                              // QR Code display\n                              <Box\n                                sx={{\n                                  width: element.size || 120,\n                                  height: element.size || 120,\n                                  border: '2px dashed #667eea',\n                                  borderRadius: 2,\n                                  display: 'flex',\n                                  flexDirection: 'column',\n                                  alignItems: 'center',\n                                  justifyContent: 'center',\n                                  backgroundColor: 'rgba(102, 126, 234, 0.1)',\n                                  color: '#667eea',\n                                  fontSize: 12,\n                                  fontWeight: 'bold',\n                                  cursor: 'move',\n                                  gap: 1,\n                                  '&:hover': {\n                                    backgroundColor: 'rgba(102, 126, 234, 0.2)',\n                                  }\n                                }}\n                              >\n                                {qrCodeDataURL ? (\n                                  <>\n                                    <img \n                                      src={qrCodeDataURL} \n                                      alt=\"QR Code\" \n                                      onClick={showQRCodeContent}\n                                      style={{ \n                                        width: '100px', \n                                        height: '100px',\n                                        cursor: 'pointer'\n                                      }} \n                                      title=\"Click to view QR code content\"\n                                    />\n                                    <Tooltip title=\"Refresh QR Code\" arrow>\n                                      <IconButton\n                                        size=\"small\"\n                                        onClick={(e) => {\n                                          e.stopPropagation();\n                                          refreshQRCode();\n                                        }}\n                                        sx={{\n                                          position: 'absolute',\n                                          top: 2,\n                                          right: 2,\n                                          backgroundColor: 'rgba(255, 255, 255, 0.8)',\n                                          '&:hover': {\n                                            backgroundColor: 'rgba(255, 255, 255, 1)',\n                                          }\n                                        }}\n                                      >\n                                        <Settings sx={{ fontSize: 16 }} />\n                                      </IconButton>\n                                    </Tooltip>\n                                  </>\n                                ) : (\n                                  <>\n                                    <QrCode sx={{ fontSize: 32 }} />\n                                    <span>Generating...</span>\n                                  </>\n                                )}\n                                \n                                {/* Information about QR code content */}\n                                <Typography \n                                  variant=\"caption\" \n                                  sx={{ \n                                    fontSize: 10, \n                                    color: '#666',\n                                    textAlign: 'center',\n                                    mt: 1,\n                                    maxWidth: '100px'\n                                  }}\n                                >\n                                  Click QR code to view content\n                                </Typography>\n                              </Box>\n                            ) : (\n                            <ContentEditable\n                              html={element.text}\n                              onChange={(e) => handleTextChange(key, e)}\n                              tagName=\"div\"\n                              className=\"content-editable\"\n                              disabled={!isEditing}\n                              style={{\n                                ...element.style,\n                                textShadow: borderImage ? '0 1px 2px rgba(0,0,0,0.3)' : 'none',\n                                backgroundColor: borderImage ? 'rgba(255, 255, 255, 0.8)' : 'transparent',\n                                padding: borderImage ? '4px 8px' : '0',\n                                borderRadius: borderImage ? '4px' : '0',\n                                pointerEvents: isEditing ? 'auto' : 'none',\n                              }}\n                            />\n                            )}\n                          </DraggableText>\n                        </Draggable>\n                      ) : (\n                        key === 'qr' ? (\n                          <Box\n                            key={key}\n                            sx={{\n                              position: 'absolute',\n                              left: element.position.x,\n                              top: element.position.y,\n                              zIndex: 1,\n                              userSelect: 'none',\n                              pointerEvents: 'none',\n                              width: element.size || 120,\n                              height: element.size || 120,\n                            }}\n                          >\n                            {qrCodeDataURL ? (\n                              <img \n                                src={qrCodeDataURL} \n                                alt=\"QR Code\" \n                                style={{ \n                                  width: '100%', \n                                  height: '100%'\n                                }} \n                              />\n                            ) : null}\n                          </Box>\n                        ) : (\n                          <Box\n                            key={key}\n                            sx={{\n                              position: 'absolute',\n                              left: element.position.x,\n                              top: element.position.y,\n                              zIndex: 1,\n                              fontSize: element.style.fontSize,\n                              fontWeight: element.style.fontWeight,\n                              color: element.style.color,\n                              fontFamily: element.style.fontFamily,\n                              textAlign: element.style.textAlign,\n                              backgroundColor: 'transparent',\n                              border: 'none',\n                              boxShadow: 'none',\n                              padding: 0,\n                              m: 0,\n                              userSelect: 'none',\n                              pointerEvents: 'none',\n                              width: 'max-content',\n                              maxWidth: '100%',\n                              whiteSpace: 'pre-line',\n                            }}\n                            dangerouslySetInnerHTML={{ __html: element.text }}\n                          />\n                        )\n                      )\n                    ))}\n                  </Paper>\n                </Box>\n\n                <Box sx={{ mt: 2, display: 'flex', justifyContent: 'center', gap: 1 }}>\n                  <IconButton onClick={() => setZoom(Math.max(0.3, zoom - 0.1))}>\n                    <ZoomOut />\n                  </IconButton>\n                  <Typography variant=\"body2\" sx={{ alignSelf: 'center', minWidth: 60 }}>\n                    {Math.round(zoom * 100)}%\n                  </Typography>\n                  <IconButton onClick={() => setZoom(Math.min(2, zoom + 0.1))}>\n                    <ZoomIn />\n                  </IconButton>\n                </Box>\n\n                <Box sx={{ mt: 2 }}>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Certificate Size: {certificateSize} ({getCertificateDimensions(certificateSize).width} × {getCertificateDimensions(certificateSize).height})\n                  </Typography>\n                </Box>\n              </Box>\n            </Grid>\n          </Grid>\n\n          <Box sx={{ display: 'flex', gap: 2, justifyContent: 'center', mt: 4 }}>\n            <Button\n              variant=\"outlined\"\n              onClick={() => navigate('/creation/border')}\n              startIcon={<ArrowBack />}\n              sx={{ \n                borderRadius: 12,\n                textTransform: 'none',\n                fontWeight: 600,\n                px: 3,\n                py: 1.5,\n                borderColor: '#667eea',\n                color: '#667eea',\n                '&:hover': {\n                  borderColor: '#5a6fd8',\n                  backgroundColor: 'rgba(102, 126, 234, 0.04)',\n                }\n              }}\n            >\n              Back to Border\n            </Button>\n            \n            <Button\n              variant=\"outlined\"\n              onClick={() => navigate('/dashboard')}\n              sx={{ \n                borderRadius: 12,\n                textTransform: 'none',\n                fontWeight: 600,\n                px: 3,\n                py: 1.5,\n                borderColor: '#667eea',\n                color: '#667eea',\n                '&:hover': {\n                  borderColor: '#5a6fd8',\n                  backgroundColor: 'rgba(102, 126, 234, 0.04)',\n                }\n              }}\n            >\n              Back to Dashboard\n            </Button>\n          </Box>\n        </StyledPaper>\n      </Container>\n    </StyledContainer>\n  );\n};\n\nexport default CertificatePreview;\n","import React from 'react';\r\nimport { Routes, Route, Navigate } from 'react-router-dom';\r\nimport SizeSelector from './SizeSelector';\r\nimport CertificateForm from './CertificateForm';\r\nimport BorderPicker from './BorderPicker';\r\nimport CertificatePreview from './CertificatePreview';\r\n\r\nconst CreationSection = () => {\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/\" element={<Navigate to=\"size\" />} />\r\n      <Route path=\"size\" element={<SizeSelector />} />\r\n      <Route path=\"form\" element={<CertificateForm />} />\r\n      <Route path=\"border\" element={<BorderPicker />} />\r\n      <Route path=\"preview\" element={<CertificatePreview />} />\r\n    </Routes>\r\n  );\r\n};\r\n\r\nexport default CreationSection;\r\n"],"names":["StyledContainer","styled","Box","_ref","theme","minHeight","background","display","alignItems","justifyContent","padding","spacing","position","overflow","StyledPaper","Paper","_ref2","borderRadius","boxShadow","border","maxWidth","width","zIndex","StyledCard","Card","_ref3","selected","transition","cursor","SizeSelector","navigate","useNavigate","selectedSize","setSelectedSize","useState","sizeOptions","id","name","dimensions","description","icon","_jsx","CropSquare","sx","fontSize","color","popular","CropPortrait","children","_jsxs","elevation","textAlign","mb","Typography","variant","fontWeight","gridTemplateColumns","xs","sm","gap","mx","map","option","CardActionArea","onClick","handleSelect","size","setTimeout","localStorage","setItem","bulkMode","sessionStorage","getItem","CardContent","p","CheckCircle","top","right","backgroundColor","Chip","label","px","py","Button","textTransform","borderColor","backdropFilter","animation","from","opacity","transform","to","StyledTextField","TextField","marginRight","StyledButton","_ref4","CertificateForm","form","setForm","course","date","issuer","paragraph","certificateTitle","errors","setErrors","handleChange","e","value","target","Container","Stepper","activeStep","Step","StepLabel","component","onSubmit","preventDefault","validateForm","newErrors","trim","Object","keys","length","JSON","stringify","Grid","container","item","fullWidth","onChange","error","helperText","required","InputProps","startAdornment","InputAdornment","Person","School","type","InputLabelProps","shrink","inputProps","max","Date","toISOString","split","CalendarToday","Business","placeholder","multiline","rows","alignSelf","mt","Description","flexWrap","startIcon","ArrowBack","endIcon","ArrowForward","borders","file","BorderPicker","selectedBorder","setSelectedBorder","src","alt","style","height","objectFit","userName","isVisible","onWatermarkReady","certificateSize","watermarkElements","setWatermarkElements","currentHash","setCurrentHash","currentPattern","setCurrentPattern","containerRef","useRef","generateWatermark","async","hash","msgBuffer","TextEncoder","encode","username","hashBuffer","crypto","subtle","digest","Array","Uint8Array","b","toString","padStart","join","console","reduce","a","charCodeAt","generateHash","pattern","getRandomPattern","patterns","Math","floor","random","getCertificateDimensions","layout","certificateWidth","arguments","undefined","certificateHeight","border-continuous","elements","hashWithSpace","hashLength","workingWidth","workingHeight","horizontalChars","verticalChars","row","col","charIndex","push","char","x","y","rotation","horizontal-center","centerY","charsPerLine","i","vertical-center","centerX","charsPerColumn","cross-pattern","diagonal-lines","diagonalLength","min","charsPerDiagonal","progress","l-shaped","lSize","t-shaped","tSize","corner-focus","cornerSize","generateWatermarkLayout","useEffect","ref","left","pointerEvents","userSelect","element","index","fontFamily","whiteSpace","letterSpacing","DraggableText","minWidth","outline","CertificatePreview","_selectedElementData$","_elements$name","certificateData","setCertificateData","borderImage","setBorderImage","setCertificateSize","isGenerating","setIsGenerating","selectedElement","setSelectedElement","zoom","setZoom","isEditing","setIsEditing","certificateRef","isBulkGenerating","setIsBulkGenerating","setBulkMode","isSaved","setIsSaved","showWatermark","setShowWatermark","watermarkHash","setWatermarkHash","watermarkPattern","setWatermarkPattern","qrCodeDataURL","setQrCodeDataURL","getElementPositions","includes","title","intro","qr","setElements","initialPositions","text","savedData","savedBorder","savedSize","bulkModeActive","data","parse","prev","newPositions","updatedElements","forEach","key","qrData","generateQRCode","generateQR","handleDrag","useCallback","handleTextChange","then","handleElementClick","updateElementStyle","property","showQRCodeContent","_currentElements$titl","_currentElements$name","_currentElements$cour","_currentElements$date","_currentElements$issu","currentElements","now","substr","alert","_currentElements$titl2","_currentElements$name2","_currentElements$cour2","_currentElements$date2","_currentElements$issu2","certificateType","recipientName","userDetails","courseName","completionDate","issuingInstitute","certificateId","issuedOn","verificationNote","readableText","log","QRCode","margin","dark","light","errorCorrectionLevel","selectedElementData","lg","DragIndicator","mr","verticalAlign","flexDirection","charAt","toUpperCase","slice","Settings","gutterBottom","Slider","parseInt","FormControl","InputLabel","Select","MenuItem","ToggleButtonGroup","exclusive","ToggleButton","FormatAlignLeft","FormatAlignCenter","FormatAlignRight","step","certificateState","disabled","IconButton","Edit","compactElements","entries","el","defaultBoxWidths","boxWidth","borderSrc","borderAbsolute","test","window","location","origin","startsWith","borderImageUrl","borderImageUrlAbsolute","referenceDimensions","bulkFileObjectUrl","Error","fileBlob","fetch","blob","_","b64","byteChars","atob","byteNums","byteArray","Blob","maxSize","toFixed","fileName","FormData","append","apiBaseUrl","process","REACT_APP_API_BASE_URL","res","method","body","ok","status","zipBlob","url","URL","createObjectURL","document","createElement","href","ts","pad","n","String","stamp","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","download","click","revokeObjectURL","message","Download","current","Promise","resolve","canvas","html2canvas","useCORS","scale","link","toDataURL","maxHeight","backgroundSize","backgroundPosition","backgroundRepeat","transformOrigin","flexShrink","bottom","Watermark","_ref5","Draggable","onStop","bounds","_Fragment","Tooltip","arrow","stopPropagation","refreshQRCode","QrCode","ContentEditable","html","tagName","className","textShadow","m","dangerouslySetInnerHTML","__html","ZoomOut","round","ZoomIn","CreationSection","Routes","Route","path","Navigate"],"sourceRoot":""}